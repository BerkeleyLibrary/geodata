# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

require:
  - rubocop-rails

AllCops:
  UseCache: false
  # Exclude generated files
  Exclude:
    - 'bin/**/*'
    - 'db/**/*'
    - 'out/**/*'
    # Exclude vendor files in GitHub build
    - 'vendor/**/*'
  NewCops: enable
  SuggestExtensions: false

# Allow one line around block body (Layout/EmptyLines will still disallow two or more)
Layout/EmptyLinesAroundBlockBody:
  Enabled: false

# Allow one line around class body (Layout/EmptyLines will still disallow two or more)
Layout/EmptyLinesAroundClassBody:
  Enabled: false

# Allow one line around module body (Layout/EmptyLines will still disallow two or more)
Layout/EmptyLinesAroundModuleBody:
  Enabled: false

# Reasonable line-length check; it's too easy for the cure to be worse than the disease
Layout/LineLength:
  Max: 350

# Make indents consistent regardless of the lengths of variables and method names and whatnot
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# Produces monsters
Layout/MultilineOperationIndentation:
  Enabled: false

# We meant to do that
Naming/MemoizedInstanceVariableName:
  Enabled: False

# It works in context, trust us
Naming/MethodParameterName:
  Enabled: False

# Confusing and weird
Naming/VariableNumber:
  Enabled: False

# Whether vertical or horizontal is more readable depends on context
Style/AccessorGrouping:
  Enabled: false

# Do what's readable in the context you're in
Style/AccessModifierDeclarations:
  Enabled: false

# ðŸ‘Ž to cultural imperialism
Style/AsciiComments:
  Enabled: false

#
Style/ClassEqualityComparison:
  Enabled: false

# Seriously?
Style/CommentedKeyword:
  Enabled: False

# Disable problematic module documentation check (see https://github.com/bbatsov/rubocop/issues/947)
Style/Documentation:
  Enabled: false

# Adding more line noise to format strings will not improve them
Style/FormatStringToken:
  Enabled: false

# Putting '# frozen_string_literal: true' everywhere does not make the world a better place
Style/FrozenStringLiteralComment:
  Enabled: false

# Requiring the lambda() method just makes wordy calls wordier
Style/Lambda:
  EnforcedStyle: literal

# `foo.positive?` is cute, but it's not actually more readable than `foo > 0`
Style/NumericPredicate:
  Enabled: false

# Don't be unnecessarily redundant
Style/ReturnNil:
  Enabled: true
  EnforcedStyle: return

# Unclear why it's a good idea to give parameters semantically meaningless names
Style/SingleLineBlockParams:
  Enabled: false

# The semantics of `foo&.bar` are a lot less interchangeable with `foo && foo.bar` than RuboCop thinks
Style/SafeNavigation:
  Enabled: false

############################################################
# Enable newer cops

Style/HashEachMethods: # (new in 0.80)
  Enabled: true
Style/HashTransformKeys: # (new in 0.80)
  Enabled: true
Style/HashTransformValues: # (new in 0.80)
  Enabled: true
Lint/RaiseException: # (new in 0.81)
  Enabled: true
Lint/StructNewOverride: # (new in 0.81)
  Enabled: true
Layout/SpaceAroundMethodCallOperator: # (new in 0.82)
  Enabled: true
Style/ExponentialNotation: # (new in 0.82)
  Enabled: false
Layout/EmptyLinesAroundAttributeAccessor: # (new in 0.83)
  Enabled: true
Style/SlicingWithRange: # (new in 0.83)
  Enabled: true
Lint/DeprecatedOpenSSLConstant: # (new in 0.84)
  Enabled: true
Lint/MixedRegexpCaptureTypes: # (new in 0.85)
  Enabled: true
Style/RedundantRegexpCharacterClass: # (new in 0.85)
  Enabled: true
Style/RedundantRegexpEscape: # (new in 0.85)
  Enabled: true
Style/RedundantFetchBlock: # (new in 0.86)
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true
Lint/EmptyBlock: # (new in 1.1)
  Enabled: true
Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true
Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true
Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true
Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true
Style/SwapValues: # (new in 1.1)
  Enabled: true
Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true
Style/CollectionCompact: # (new in 1.2)
  Enabled: true
Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true
Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true
Lint/EmptyClass: # (new in 1.3)
  Enabled: true
Style/NilLambda: # (new in 1.3)
  Enabled: true
Style/RedundantArgument: # (new in 1.4)
  Enabled: true
Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true
Layout/SpaceBeforeBrackets: # (new in 1.7)
  Enabled: true
Lint/AmbiguousAssignment: # (new in 1.7)
  Enabled: true
Style/HashExcept: # (new in 1.7)
  Enabled: true
Lint/DeprecatedConstants: # (new in 1.8)
  Enabled: true
Lint/LambdaWithoutLiteralBlock: # (new in 1.8)
  Enabled: true
Lint/RedundantDirGlobSort: # (new in 1.8)
  Enabled: true
Style/EndlessMethod: # (new in 1.8)
  Enabled: true
Lint/NumberedParameterAssignment: # (new in 1.9)
  Enabled: true
Lint/OrAssignmentToConstant: # (new in 1.9)
  Enabled: true
Lint/SymbolConversion: # (new in 1.9)
  Enabled: true
Lint/TripleQuotes: # (new in 1.9)
  Enabled: true
Style/IfWithBooleanLiteralBranches: # (new in 1.9)
  Enabled: true
Gemspec/DeprecatedAttributeAssignment: # (new in 1.10)
  Enabled: true
Style/HashConversion: # (new in 1.10)
  Enabled: true
Style/StringChars: # (new in 1.12)
  Enabled: true
Lint/EmptyInPattern: # (new in 1.16)
  Enabled: true
Style/InPatternThen: # (new in 1.16)
  Enabled: true
Style/MultilineInPatternThen: # (new in 1.16)
  Enabled: true
Style/QuotedSymbols: # (new in 1.16)
  Enabled: true
Layout/LineEndStringConcatenationIndentation: # (new in 1.18)
  Enabled: true
Naming/InclusiveLanguage: # (new in 1.18)
  Enabled: true
Lint/AmbiguousRange: # new in 1.19
  Enabled: true
Style/RedundantSelfAssignmentBranch: # new in 1.19
  Enabled: true
Lint/AmbiguousOperatorPrecedence: # new in 1.21
  Enabled: true
Lint/IncompatibleIoSelectWithFiberScheduler: # new in 1.21
  Enabled: true
Lint/RequireRelativeSelfPath: # new in 1.22
  Enabled: true
Security/IoMethods: # new in 1.22
  Enabled: true
Style/NumberedParameters: # new in 1.22
  Enabled: true
Style/NumberedParametersLimit: # new in 1.22
  Enabled: true
Style/SelectByRegexp: # new in 1.22
  Enabled: true
Gemspec/RequireMFA: # new in 1.23
  Enabled: true
Lint/UselessRuby2Keywords: # new in 1.23
  Enabled: true
Style/OpenStructUse: # new in 1.23
  Enabled: true
Naming/BlockForwarding: # new in 1.24
  Enabled: true
Style/FileRead: # new in 1.24
  Enabled: true
Style/FileWrite: # new in 1.24
  Enabled: true
Style/MapToHash: # new in 1.24
  Enabled: true
Style/NestedFileDirname: # new in 1.26
  Enabled: true

############################################################
# rubocop-rails

# https://github.com/rubocop/rubocop-rails/issues/652
Rails/ApplicationRecord:
  Enabled: false

# explicit >>> implicit
Rails/Delegate:
  Enabled: false

# explicit >>> implicit
Rails/DurationArithmetic: # new in 2.13
  Enabled: false

# when we want cheap messages we'll ask for them
Rails/EagerEvaluationLogMessage: # new in 2.11
  Enabled: false

# readable >>> consistent
Rails/FilePath:
  Enabled: false

# we meant to do that
Rails/HasAndBelongsToMany:
  Enabled: false

# for serious index_by fans only
Rails/IndexWith:
  Enabled: false

# simplicity >>> pedantry
Rails/PluralizationGrammar:
  Enabled: false

# if we need it, we'll ask for it
Rails/RakeEnvironment:
  Enabled: false

############################################################
# Enable newer rubocop-rails cops

Rails/ActiveRecordCallbacksOrder: # new in 2.7
  Enabled: true
Rails/FindById: # new in 2.7
  Enabled: true
Rails/Inquiry: # new in 2.7
  Enabled: true
Rails/MailerName: # new in 2.7
  Enabled: true
Rails/MatchRoute: # new in 2.7
  Enabled: true
Rails/NegateInclude: # new in 2.7
  Enabled: true
Rails/Pluck: # new in 2.7
  Enabled: true
Rails/PluckInWhere: # new in 2.7
  Enabled: true
Rails/RenderInline: # new in 2.7
  Enabled: true
Rails/RenderPlainText: # new in 2.7
  Enabled: true
Rails/ShortI18n: # new in 2.7
  Enabled: true
Rails/WhereExists: # new in 2.7
  Enabled: true
Rails/AfterCommitOverride: # new in 2.8
  Enabled: true
Rails/SquishedSQLHeredocs: # new in 2.8
  Enabled: true
Rails/WhereNot: # new in 2.8
  Enabled: true
Rails/AttributeDefaultBlockValue: # new in 2.9
  Enabled: true
Rails/WhereEquals: # new in 2.9
  Enabled: true
Rails/TimeZoneAssignment: # new in 2.10
  Enabled: true
Rails/AddColumnIndex: # new in 2.11
  Enabled: true
Rails/ExpandedDateRange: # new in 2.11
  Enabled: true
Rails/I18nLocaleAssignment: # new in 2.11
  Enabled: true
Rails/UnusedIgnoredColumns: # new in 2.11
  Enabled: true
Rails/RedundantTravelBack: # new in 2.12
  Enabled: true
Rails/CompactBlank: # new in 2.13
  Enabled: true
Rails/RedundantPresenceValidationOnBelongsTo: # new in 2.13
  Enabled: true
Rails/RootJoinChain: # new in 2.13
  Enabled: true

# to skip default code generation
Metrics/ClassLength:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/BlockLength:
  Enabled: false

# enable new cops
Gemspec/DevelopmentDependencies: # new in 1.44
  Enabled: true
Layout/LineContinuationLeadingSpace: # new in 1.31
  Enabled: true
Layout/LineContinuationSpacing: # new in 1.31
  Enabled: true
Lint/ConstantOverwrittenInRescue: # new in 1.31
  Enabled: true
Lint/DuplicateMagicComment: # new in 1.37
  Enabled: true
Lint/DuplicateMatchPattern: # new in 1.50
  Enabled: true
Lint/ItWithoutArgumentsInBlock: # new in 1.59
  Enabled: true
Lint/LiteralAssignmentInCondition: # new in 1.58
  Enabled: true
Lint/MixedCaseRange: # new in 1.53
  Enabled: true
Lint/NonAtomicFileOperation: # new in 1.31
  Enabled: true
Lint/RedundantRegexpQuantifiers: # new in 1.53
  Enabled: true
Lint/RefinementImportMethods: # new in 1.27
  Enabled: true
Lint/RequireRangeParentheses: # new in 1.32
  Enabled: true
Lint/UselessRescue: # new in 1.43
  Enabled: true
Metrics/CollectionLiteralLength: # new in 1.47
  Enabled: true
Security/CompoundHash: # new in 1.28
  Enabled: true
Style/ArrayIntersect: # new in 1.40
  Enabled: false
Style/ComparableClamp: # new in 1.44
  Enabled: true
Style/ConcatArrayLiterals: # new in 1.41
  Enabled: true
Style/DataInheritance: # new in 1.49
  Enabled: true
Style/DirEmpty: # new in 1.48
  Enabled: true
Style/EmptyHeredoc: # new in 1.32
  Enabled: true
Style/EnvHome: # new in 1.29
  Enabled: true
Style/ExactRegexpMatch: # new in 1.51
  Enabled: true
Style/FetchEnvVar: # new in 1.28
  Enabled: true
Style/FileEmpty: # new in 1.48
  Enabled: true
Style/MagicCommentFormat: # new in 1.35
  Enabled: true
Style/MapCompactWithConditionalBlock: # new in 1.30
  Enabled: true
Style/MapIntoArray: # new in 1.63
  Enabled: true
Style/MapToSet: # new in 1.42
  Enabled: true
Style/MinMaxComparison: # new in 1.42
  Enabled: true
Style/ObjectThen: # new in 1.28
  Enabled: true
Style/OperatorMethodCall: # new in 1.37
  Enabled: true
Style/RedundantArrayConstructor: # new in 1.52
  Enabled: true
Style/RedundantConstantBase: # new in 1.40
  Enabled: true
Style/RedundantCurrentDirectoryInPath: # new in 1.53
  Enabled: true
Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Enabled: true
Style/RedundantEach: # new in 1.38
  Enabled: true
Style/RedundantFilterChain: # new in 1.52
  Enabled: true
Style/RedundantHeredocDelimiterQuotes: # new in 1.45
  Enabled: true
Style/RedundantInitialize: # new in 1.27
  Enabled: true
Style/RedundantLineContinuation: # new in 1.49
  Enabled: true
Style/RedundantRegexpArgument: # new in 1.53
  Enabled: true
Style/RedundantRegexpConstructor: # new in 1.52
  Enabled: true
Style/RedundantStringEscape: # new in 1.37
  Enabled: true
Style/ReturnNilInPredicateMethodDefinition: # new in 1.53
  Enabled: true
Style/SingleLineDoEndBlock: # new in 1.57
  Enabled: true
Style/SuperWithArgsParentheses: # new in 1.58
  Enabled: true
Style/YAMLFileRead: # new in 1.53
  Enabled: true
Rails/ActionControllerFlashBeforeRender: # new in 2.16
  Enabled: true
Rails/ActionControllerTestCase: # new in 2.14
  Enabled: true
Rails/ActionOrder: # new in 2.17
  Enabled: true
Rails/ActiveSupportOnLoad: # new in 2.16
  Enabled: true
Rails/DangerousColumnNames: # new in 2.21
  Enabled: true
Rails/DeprecatedActiveModelErrorsMethods: # new in 2.14
  Enabled: true
Rails/DotSeparatedKeys: # new in 2.15
  Enabled: true
Rails/DuplicateAssociation: # new in 2.14
  Enabled: true
Rails/DuplicateScope: # new in 2.14
  Enabled: true
Rails/EnvLocal: # new in 2.22
  Enabled: true
Rails/FreezeTime: # new in 2.16
  Enabled: true
Rails/I18nLazyLookup: # new in 2.14
  Enabled: true
Rails/I18nLocaleTexts: # new in 2.14
  Enabled: false
Rails/IgnoredColumnsAssignment: # new in 2.17
  Enabled: true
Rails/MigrationClassName: # new in 2.14
  Enabled: true
Rails/RedundantActiveRecordAllMethod: # new in 2.21
  Enabled: true
Rails/ResponseParsedBody: # new in 2.18
  Enabled: true
Rails/RootPathnameMethods: # new in 2.16
  Enabled: true
Rails/RootPublicPath: # new in 2.15
  Enabled: true
Rails/SelectMap: # new in 2.21
  Enabled: true
Rails/StripHeredoc: # new in 2.15
  Enabled: true
Rails/ThreeStateBooleanColumn: # new in 2.19
  Enabled: true
Rails/ToFormattedS: # new in 2.15
  Enabled: true
Rails/ToSWithArgument: # new in 2.16
  Enabled: true
Rails/TopLevelHashWithIndifferentAccess: # new in 2.16
  Enabled: true
Rails/TransactionExitStatement: # new in 2.14
  Enabled: true
Rails/UnusedRenderContent: # new in 2.21
  Enabled: true
Rails/WhereMissing: # new in 2.16
  Enabled: true
Rails/WhereNotWithMultipleConditions: # new in 2.17
  Enabled: true